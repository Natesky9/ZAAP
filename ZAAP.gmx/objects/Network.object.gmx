<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Buffer = buffer_create(1024,buffer_fixed,1)
port = 9000
Server = network_create_server(network_socket_tcp,port,maxclients)
SocketList = ds_list_create()
Players = ds_map_create()

mode = "host"

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = ds_map_find_value(async_load,"type");
switch(type)
    {
    case network_type_connect:
        {
        socket = ds_map_find_value( async_load , "socket" );
        ds_list_add( SocketList , socket );
        ds_map_add(Players,socket,playerid)
        break;
        }
    case network_type_disconnect:
        {
        var socket = ds_map_find_value( async_load , "socket" );
        var findsocket = ds_list_find_index( SocketList , socket );
         
        if ( findsocket &gt;= 0 )
            {
            ds_list_delete( SocketList , findsocket );
            with ds_map_find_value(Players,socket)
            instance_destroy()
            ds_map_delete(Players,socket)
            }
        break;
        }
    case network_type_data:
        {
        var buffer = ds_map_find_value( async_load , "buffer" );
        var socket = ds_map_find_value( async_load , "id" );
        buffer_seek( buffer , buffer_seek_start , 0 );
        Server_Packet(buffer,socket)
        }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
